
AVRASM ver. 2.1.30  G:\meriikh\Follow the line\Follow-the-line-robot\My-code\Debug\List\s1.asm Sun Jan 22 23:46:23 2023

                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16A
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16A
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 002a 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 __RESET:
00002a 94f8      	CLI
00002b 27ee      	CLR  R30
00002c bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00002d e0f1      	LDI  R31,1
00002e bffb      	OUT  GICR,R31
00002f bfeb      	OUT  GICR,R30
000030 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000031 e08d      	LDI  R24,(14-2)+1
000032 e0a2      	LDI  R26,2
000033 27bb      	CLR  R27
                 __CLEAR_REG:
000034 93ed      	ST   X+,R30
000035 958a      	DEC  R24
000036 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000037 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000038 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000039 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00003a 93ed      	ST   X+,R30
00003b 9701      	SBIW R24,1
00003c f7e9      	BRNE __CLEAR_SRAM
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00003d e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00003e bfed      	OUT  SPL,R30
00003f e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000040 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000041 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000042 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000043 940c 0045 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*******************************************************
                 ;Project :
                 ;Version :  1.8.0
                 ;Date    : 16/01/2023
                 ;Author  :
                 ;Company :
                 ;Comments:
                 ;
                 ;
                 ;Chip type               : ATmega16A
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 8.000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 256
                 ;*******************************************************/
                 ;
                 ;#include <mega16a.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;
                 ;void main(void)
                 ; 0000 0015 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0016     // Input/Output Ports initialization
                 ; 0000 0017     // Port A initialization
                 ; 0000 0018     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0019     DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
000045 e0e0      	LDI  R30,LOW(0)
000046 bbea      	OUT  0x1A,R30
                 ; 0000 001A     // Port B initialization
                 ; 0000 001B     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 001C     DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
000047 bbe7      	OUT  0x17,R30
                 ; 0000 001D     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 001E     PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (1<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
000048 e0e8      	LDI  R30,LOW(8)
000049 bbe8      	OUT  0x18,R30
                 ; 0000 001F 
                 ; 0000 0020     // Port C initialization
                 ; 0000 0021     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 0022     DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
00004a e0ef      	LDI  R30,LOW(15)
00004b bbe4      	OUT  0x14,R30
                 ; 0000 0023     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 0024     PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
00004c e0e0      	LDI  R30,LOW(0)
00004d bbe5      	OUT  0x15,R30
                 ; 0000 0025 
                 ; 0000 0026     // Port D initialization
                 ; 0000 0027     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0028     DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
00004e bbe1      	OUT  0x11,R30
                 ; 0000 0029     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 002A     PORTD=(1<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
00004f e8e0      	LDI  R30,LOW(128)
000050 bbe2      	OUT  0x12,R30
                 ; 0000 002B 
                 ; 0000 002C     while (1)
                 _0x3:
                 ; 0000 002D     {
                 ; 0000 002E         if (PINA.0==1&&PINA.1==1&&PINA.2==1&&PINA.3==0&&PINA.4==1&&PINA.5==1&&PINA.6==1||PINA.0==0&&PINA.1==0&&PINA.2==0 ...
000051 9bc8      	SBIS 0x19,0
000052 c00c      	RJMP _0x7
000053 9bc9      	SBIS 0x19,1
000054 c00a      	RJMP _0x7
000055 9bca      	SBIS 0x19,2
000056 c008      	RJMP _0x7
000057 99cb      	SBIC 0x19,3
000058 c006      	RJMP _0x7
000059 9bcc      	SBIS 0x19,4
00005a c004      	RJMP _0x7
00005b 9bcd      	SBIS 0x19,5
00005c c002      	RJMP _0x7
00005d 99ce      	SBIC 0x19,6
00005e c0ef      	RJMP _0x9
                 _0x7:
00005f 99c8      	SBIC 0x19,0
000060 c00c      	RJMP _0xA
000061 99c9      	SBIC 0x19,1
000062 c00a      	RJMP _0xA
000063 99ca      	SBIC 0x19,2
000064 c008      	RJMP _0xA
000065 99cb      	SBIC 0x19,3
000066 c006      	RJMP _0xA
000067 99cc      	SBIC 0x19,4
000068 c004      	RJMP _0xA
000069 99cd      	SBIC 0x19,5
00006a c002      	RJMP _0xA
00006b 9bce      	SBIS 0x19,6
00006c c0e1      	RJMP _0x9
                 _0xA:
00006d 99c8      	SBIC 0x19,0
00006e c00c      	RJMP _0xC
00006f 99c9      	SBIC 0x19,1
000070 c00a      	RJMP _0xC
000071 99ca      	SBIC 0x19,2
000072 c008      	RJMP _0xC
000073 9bcb      	SBIS 0x19,3
000074 c006      	RJMP _0xC
000075 99cc      	SBIC 0x19,4
000076 c004      	RJMP _0xC
000077 99cd      	SBIC 0x19,5
000078 c002      	RJMP _0xC
000079 9bce      	SBIS 0x19,6
00007a c0d3      	RJMP _0x9
                 _0xC:
00007b 9bc8      	SBIS 0x19,0
00007c c00c      	RJMP _0xE
00007d 99c9      	SBIC 0x19,1
00007e c00a      	RJMP _0xE
00007f 99ca      	SBIC 0x19,2
000080 c008      	RJMP _0xE
000081 9bcb      	SBIS 0x19,3
000082 c006      	RJMP _0xE
000083 99cc      	SBIC 0x19,4
000084 c004      	RJMP _0xE
000085 99cd      	SBIC 0x19,5
000086 c002      	RJMP _0xE
000087 9bce      	SBIS 0x19,6
000088 c0c5      	RJMP _0x9
                 _0xE:
000089 9bc8      	SBIS 0x19,0
00008a c00c      	RJMP _0x10
00008b 9bc9      	SBIS 0x19,1
00008c c00a      	RJMP _0x10
00008d 99ca      	SBIC 0x19,2
00008e c008      	RJMP _0x10
00008f 9bcb      	SBIS 0x19,3
000090 c006      	RJMP _0x10
000091 99cc      	SBIC 0x19,4
000092 c004      	RJMP _0x10
000093 99cd      	SBIC 0x19,5
000094 c002      	RJMP _0x10
000095 9bce      	SBIS 0x19,6
000096 c0b7      	RJMP _0x9
                 _0x10:
000097 9bc8      	SBIS 0x19,0
000098 c00c      	RJMP _0x12
000099 9bc9      	SBIS 0x19,1
00009a c00a      	RJMP _0x12
00009b 9bca      	SBIS 0x19,2
00009c c008      	RJMP _0x12
00009d 9bcb      	SBIS 0x19,3
00009e c006      	RJMP _0x12
00009f 99cc      	SBIC 0x19,4
0000a0 c004      	RJMP _0x12
0000a1 99cd      	SBIC 0x19,5
0000a2 c002      	RJMP _0x12
0000a3 9bce      	SBIS 0x19,6
0000a4 c0a9      	RJMP _0x9
                 _0x12:
0000a5 9bc8      	SBIS 0x19,0
0000a6 c00c      	RJMP _0x14
0000a7 9bc9      	SBIS 0x19,1
0000a8 c00a      	RJMP _0x14
0000a9 9bca      	SBIS 0x19,2
0000aa c008      	RJMP _0x14
0000ab 9bcb      	SBIS 0x19,3
0000ac c006      	RJMP _0x14
0000ad 9bcc      	SBIS 0x19,4
0000ae c004      	RJMP _0x14
0000af 99cd      	SBIC 0x19,5
0000b0 c002      	RJMP _0x14
0000b1 9bce      	SBIS 0x19,6
0000b2 c09b      	RJMP _0x9
                 _0x14:
0000b3 9bc8      	SBIS 0x19,0
0000b4 c00c      	RJMP _0x16
0000b5 9bc9      	SBIS 0x19,1
0000b6 c00a      	RJMP _0x16
0000b7 9bca      	SBIS 0x19,2
0000b8 c008      	RJMP _0x16
0000b9 9bcb      	SBIS 0x19,3
0000ba c006      	RJMP _0x16
0000bb 9bcc      	SBIS 0x19,4
0000bc c004      	RJMP _0x16
0000bd 9bcd      	SBIS 0x19,5
0000be c002      	RJMP _0x16
0000bf 9bce      	SBIS 0x19,6
0000c0 c08d      	RJMP _0x9
                 _0x16:
0000c1 9bc8      	SBIS 0x19,0
0000c2 c00c      	RJMP _0x18
0000c3 9bc9      	SBIS 0x19,1
0000c4 c00a      	RJMP _0x18
0000c5 9bca      	SBIS 0x19,2
0000c6 c008      	RJMP _0x18
0000c7 9bcb      	SBIS 0x19,3
0000c8 c006      	RJMP _0x18
0000c9 9bcc      	SBIS 0x19,4
0000ca c004      	RJMP _0x18
0000cb 9bcd      	SBIS 0x19,5
0000cc c002      	RJMP _0x18
0000cd 99ce      	SBIC 0x19,6
0000ce c07f      	RJMP _0x9
                 _0x18:
0000cf 9bc8      	SBIS 0x19,0
0000d0 c00c      	RJMP _0x1A
0000d1 99c9      	SBIC 0x19,1
0000d2 c00a      	RJMP _0x1A
0000d3 9bca      	SBIS 0x19,2
0000d4 c008      	RJMP _0x1A
0000d5 9bcb      	SBIS 0x19,3
0000d6 c006      	RJMP _0x1A
0000d7 99cc      	SBIC 0x19,4
0000d8 c004      	RJMP _0x1A
0000d9 99cd      	SBIC 0x19,5
0000da c002      	RJMP _0x1A
0000db 9bce      	SBIS 0x19,6
0000dc c071      	RJMP _0x9
                 _0x1A:
0000dd 99c8      	SBIC 0x19,0
0000de c00c      	RJMP _0x1C
0000df 99c9      	SBIC 0x19,1
0000e0 c00a      	RJMP _0x1C
0000e1 9bca      	SBIS 0x19,2
0000e2 c008      	RJMP _0x1C
0000e3 9bcb      	SBIS 0x19,3
0000e4 c006      	RJMP _0x1C
0000e5 99cc      	SBIC 0x19,4
0000e6 c004      	RJMP _0x1C
0000e7 99cd      	SBIC 0x19,5
0000e8 c002      	RJMP _0x1C
0000e9 9bce      	SBIS 0x19,6
0000ea c063      	RJMP _0x9
                 _0x1C:
0000eb 99c8      	SBIC 0x19,0
0000ec c00c      	RJMP _0x1E
0000ed 99c9      	SBIC 0x19,1
0000ee c00a      	RJMP _0x1E
0000ef 9bca      	SBIS 0x19,2
0000f0 c008      	RJMP _0x1E
0000f1 9bcb      	SBIS 0x19,3
0000f2 c006      	RJMP _0x1E
0000f3 9bcc      	SBIS 0x19,4
0000f4 c004      	RJMP _0x1E
0000f5 99cd      	SBIC 0x19,5
0000f6 c002      	RJMP _0x1E
0000f7 9bce      	SBIS 0x19,6
0000f8 c055      	RJMP _0x9
                 _0x1E:
0000f9 99c8      	SBIC 0x19,0
0000fa c00c      	RJMP _0x20
0000fb 99c9      	SBIC 0x19,1
0000fc c00a      	RJMP _0x20
0000fd 9bca      	SBIS 0x19,2
0000fe c008      	RJMP _0x20
0000ff 9bcb      	SBIS 0x19,3
000100 c006      	RJMP _0x20
000101 9bcc      	SBIS 0x19,4
000102 c004      	RJMP _0x20
000103 9bcd      	SBIS 0x19,5
000104 c002      	RJMP _0x20
000105 9bce      	SBIS 0x19,6
000106 c047      	RJMP _0x9
                 _0x20:
000107 99c8      	SBIC 0x19,0
000108 c00c      	RJMP _0x22
000109 9bc9      	SBIS 0x19,1
00010a c00a      	RJMP _0x22
00010b 9bca      	SBIS 0x19,2
00010c c008      	RJMP _0x22
00010d 9bcb      	SBIS 0x19,3
00010e c006      	RJMP _0x22
00010f 9bcc      	SBIS 0x19,4
000110 c004      	RJMP _0x22
000111 9bcd      	SBIS 0x19,5
000112 c002      	RJMP _0x22
000113 9bce      	SBIS 0x19,6
000114 c039      	RJMP _0x9
                 _0x22:
000115 99c8      	SBIC 0x19,0
000116 c00c      	RJMP _0x24
000117 99c9      	SBIC 0x19,1
000118 c00a      	RJMP _0x24
000119 9bca      	SBIS 0x19,2
00011a c008      	RJMP _0x24
00011b 9bcb      	SBIS 0x19,3
00011c c006      	RJMP _0x24
00011d 9bcc      	SBIS 0x19,4
00011e c004      	RJMP _0x24
00011f 9bcd      	SBIS 0x19,5
000120 c002      	RJMP _0x24
000121 9bce      	SBIS 0x19,6
000122 c02b      	RJMP _0x9
                 _0x24:
000123 9bc8      	SBIS 0x19,0
000124 c00c      	RJMP _0x26
000125 99c9      	SBIC 0x19,1
000126 c00a      	RJMP _0x26
000127 9bca      	SBIS 0x19,2
000128 c008      	RJMP _0x26
000129 99cb      	SBIC 0x19,3
00012a c006      	RJMP _0x26
00012b 9bcc      	SBIS 0x19,4
00012c c004      	RJMP _0x26
00012d 99cd      	SBIC 0x19,5
00012e c002      	RJMP _0x26
00012f 99ce      	SBIC 0x19,6
000130 c01d      	RJMP _0x9
                 _0x26:
000131 9bc8      	SBIS 0x19,0
000132 c00c      	RJMP _0x28
000133 99c9      	SBIC 0x19,1
000134 c00a      	RJMP _0x28
000135 9bca      	SBIS 0x19,2
000136 c008      	RJMP _0x28
000137 9bcb      	SBIS 0x19,3
000138 c006      	RJMP _0x28
000139 9bcc      	SBIS 0x19,4
00013a c004      	RJMP _0x28
00013b 99cd      	SBIC 0x19,5
00013c c002      	RJMP _0x28
00013d 99ce      	SBIC 0x19,6
00013e c00f      	RJMP _0x9
                 _0x28:
00013f 99c8      	SBIC 0x19,0
000140 c00c      	RJMP _0x2A
000141 99c9      	SBIC 0x19,1
000142 c00a      	RJMP _0x2A
000143 9bca      	SBIS 0x19,2
000144 c008      	RJMP _0x2A
000145 9bcb      	SBIS 0x19,3
000146 c006      	RJMP _0x2A
000147 9bcc      	SBIS 0x19,4
000148 c004      	RJMP _0x2A
000149 9bcd      	SBIS 0x19,5
00014a c002      	RJMP _0x2A
00014b 9bce      	SBIS 0x19,6
00014c c001      	RJMP _0x9
                 _0x2A:
00014d c004      	RJMP _0x6
                 _0x9:
                 ; 0000 002F         {
                 ; 0000 0030             PORTC.0=1;
00014e 9aa8      	SBI  0x15,0
                 ; 0000 0031             PORTC.1=0;
00014f 98a9      	CBI  0x15,1
                 ; 0000 0032             PORTC.2=1;
000150 9aaa      	SBI  0x15,2
                 ; 0000 0033             PORTC.3=0;
000151 98ab      	CBI  0x15,3
                 ; 0000 0034         }
                 ; 0000 0035         if (PINA.0==0&&PINA.1==0&&PINA.2==0&&PINA.3==0&&PINA.4==1&&PINA.5==1&&PINA.6==1) // R
                 _0x6:
000152 99c8      	SBIC 0x19,0
000153 c00c      	RJMP _0x36
000154 99c9      	SBIC 0x19,1
000155 c00a      	RJMP _0x36
000156 99ca      	SBIC 0x19,2
000157 c008      	RJMP _0x36
000158 99cb      	SBIC 0x19,3
000159 c006      	RJMP _0x36
00015a 9bcc      	SBIS 0x19,4
00015b c004      	RJMP _0x36
00015c 9bcd      	SBIS 0x19,5
00015d c002      	RJMP _0x36
00015e 99ce      	SBIC 0x19,6
00015f c001      	RJMP _0x37
                 _0x36:
000160 c001      	RJMP _0x35
                 _0x37:
                 ; 0000 0036         {
                 ; 0000 0037             PORTC.0=1;
000161 d0e0      	RCALL SUBOPT_0x0
                 ; 0000 0038             PORTC.1=0;
                 ; 0000 0039             PORTC.2=0;
                 ; 0000 003A             PORTC.3=0;
                 ; 0000 003B         }
                 ; 0000 003C         if (PINA.0==0&&PINA.1==0&&PINA.2==0&&PINA.3==0&&PINA.4==0&&PINA.5==0&&PINA.6==1) // R
                 _0x35:
000162 99c8      	SBIC 0x19,0
000163 c00c      	RJMP _0x41
000164 99c9      	SBIC 0x19,1
000165 c00a      	RJMP _0x41
000166 99ca      	SBIC 0x19,2
000167 c008      	RJMP _0x41
000168 99cb      	SBIC 0x19,3
000169 c006      	RJMP _0x41
00016a 99cc      	SBIC 0x19,4
00016b c004      	RJMP _0x41
00016c 99cd      	SBIC 0x19,5
00016d c002      	RJMP _0x41
00016e 99ce      	SBIC 0x19,6
00016f c001      	RJMP _0x42
                 _0x41:
000170 c004      	RJMP _0x40
                 _0x42:
                 ; 0000 003D         {
                 ; 0000 003E             PORTC.0=1;
000171 9aa8      	SBI  0x15,0
                 ; 0000 003F             PORTC.1=0;
000172 98a9      	CBI  0x15,1
                 ; 0000 0040             PORTC.2=0;
000173 98aa      	CBI  0x15,2
                 ; 0000 0041             PORTC.3=1;
000174 9aab      	SBI  0x15,3
                 ; 0000 0042         }
                 ; 0000 0043         if (PINA.0==0&&PINA.1==0&&PINA.2==0&&PINA.3==0&&PINA.4==1&&PINA.5==0&&PINA.6==0) // R
                 _0x40:
000175 99c8      	SBIC 0x19,0
000176 c00c      	RJMP _0x4C
000177 99c9      	SBIC 0x19,1
000178 c00a      	RJMP _0x4C
000179 99ca      	SBIC 0x19,2
00017a c008      	RJMP _0x4C
00017b 99cb      	SBIC 0x19,3
00017c c006      	RJMP _0x4C
00017d 9bcc      	SBIS 0x19,4
00017e c004      	RJMP _0x4C
00017f 99cd      	SBIC 0x19,5
000180 c002      	RJMP _0x4C
000181 9bce      	SBIS 0x19,6
000182 c001      	RJMP _0x4D
                 _0x4C:
000183 c001      	RJMP _0x4B
                 _0x4D:
                 ; 0000 0044         {
                 ; 0000 0045             PORTC.0=1;
000184 d0bd      	RCALL SUBOPT_0x0
                 ; 0000 0046             PORTC.1=0;
                 ; 0000 0047             PORTC.2=0;
                 ; 0000 0048             PORTC.3=0;
                 ; 0000 0049         }
                 ; 0000 004A         if (PINA.0==0&&PINA.1==0&&PINA.2==0&&PINA.3==0&&PINA.4==0&&PINA.5==1&&PINA.6==0)// R
                 _0x4B:
000185 99c8      	SBIC 0x19,0
000186 c00c      	RJMP _0x57
000187 99c9      	SBIC 0x19,1
000188 c00a      	RJMP _0x57
000189 99ca      	SBIC 0x19,2
00018a c008      	RJMP _0x57
00018b 99cb      	SBIC 0x19,3
00018c c006      	RJMP _0x57
00018d 99cc      	SBIC 0x19,4
00018e c004      	RJMP _0x57
00018f 9bcd      	SBIS 0x19,5
000190 c002      	RJMP _0x57
000191 9bce      	SBIS 0x19,6
000192 c001      	RJMP _0x58
                 _0x57:
000193 c001      	RJMP _0x56
                 _0x58:
                 ; 0000 004B         {
                 ; 0000 004C             PORTC.0=1;
000194 d0ad      	RCALL SUBOPT_0x0
                 ; 0000 004D             PORTC.1=0;
                 ; 0000 004E             PORTC.2=0;
                 ; 0000 004F             PORTC.3=0;
                 ; 0000 0050         }
                 ; 0000 0051         if (PINA.0==0&&PINA.1==0&&PINA.2==0&&PINA.3==0&&PINA.4==1&&PINA.5==0&&PINA.6==1)// R
                 _0x56:
000195 99c8      	SBIC 0x19,0
000196 c00c      	RJMP _0x62
000197 99c9      	SBIC 0x19,1
000198 c00a      	RJMP _0x62
000199 99ca      	SBIC 0x19,2
00019a c008      	RJMP _0x62
00019b 99cb      	SBIC 0x19,3
00019c c006      	RJMP _0x62
00019d 9bcc      	SBIS 0x19,4
00019e c004      	RJMP _0x62
00019f 99cd      	SBIC 0x19,5
0001a0 c002      	RJMP _0x62
0001a1 99ce      	SBIC 0x19,6
0001a2 c001      	RJMP _0x63
                 _0x62:
0001a3 c001      	RJMP _0x61
                 _0x63:
                 ; 0000 0052         {
                 ; 0000 0053             PORTC.0=1;
0001a4 d09d      	RCALL SUBOPT_0x0
                 ; 0000 0054             PORTC.1=0;
                 ; 0000 0055             PORTC.2=0;
                 ; 0000 0056             PORTC.3=0;
                 ; 0000 0057         }
                 ; 0000 0058         if (PINA.0==0&&PINA.1==0&&PINA.2==0&&PINA.3==0&&PINA.4==0&&PINA.5==1&&PINA.6==1)// R
                 _0x61:
0001a5 99c8      	SBIC 0x19,0
0001a6 c00c      	RJMP _0x6D
0001a7 99c9      	SBIC 0x19,1
0001a8 c00a      	RJMP _0x6D
0001a9 99ca      	SBIC 0x19,2
0001aa c008      	RJMP _0x6D
0001ab 99cb      	SBIC 0x19,3
0001ac c006      	RJMP _0x6D
0001ad 99cc      	SBIC 0x19,4
0001ae c004      	RJMP _0x6D
0001af 9bcd      	SBIS 0x19,5
0001b0 c002      	RJMP _0x6D
0001b1 99ce      	SBIC 0x19,6
0001b2 c001      	RJMP _0x6E
                 _0x6D:
0001b3 c001      	RJMP _0x6C
                 _0x6E:
                 ; 0000 0059         {
                 ; 0000 005A             PORTC.0=1;
0001b4 d08d      	RCALL SUBOPT_0x0
                 ; 0000 005B             PORTC.1=0;
                 ; 0000 005C             PORTC.2=0;
                 ; 0000 005D             PORTC.3=0;
                 ; 0000 005E         }
                 ; 0000 005F         if (PINA.0==0&&PINA.1==0&&PINA.2==0&&PINA.3==0&&PINA.4==1&&PINA.5==1&&PINA.6==0)// R
                 _0x6C:
0001b5 99c8      	SBIC 0x19,0
0001b6 c00c      	RJMP _0x78
0001b7 99c9      	SBIC 0x19,1
0001b8 c00a      	RJMP _0x78
0001b9 99ca      	SBIC 0x19,2
0001ba c008      	RJMP _0x78
0001bb 99cb      	SBIC 0x19,3
0001bc c006      	RJMP _0x78
0001bd 9bcc      	SBIS 0x19,4
0001be c004      	RJMP _0x78
0001bf 9bcd      	SBIS 0x19,5
0001c0 c002      	RJMP _0x78
0001c1 9bce      	SBIS 0x19,6
0001c2 c001      	RJMP _0x79
                 _0x78:
0001c3 c001      	RJMP _0x77
                 _0x79:
                 ; 0000 0060         {
                 ; 0000 0061             PORTC.0=1;
0001c4 d07d      	RCALL SUBOPT_0x0
                 ; 0000 0062             PORTC.1=0;
                 ; 0000 0063             PORTC.2=0;
                 ; 0000 0064             PORTC.3=0;
                 ; 0000 0065         }
                 ; 0000 0066         if (PINA.0==1&&PINA.1==1&&PINA.2==1&&PINA.3==0&&PINA.4==0&&PINA.5==0&&PINA.6==0) // Left Station
                 _0x77:
0001c5 9bc8      	SBIS 0x19,0
0001c6 c00c      	RJMP _0x83
0001c7 9bc9      	SBIS 0x19,1
0001c8 c00a      	RJMP _0x83
0001c9 9bca      	SBIS 0x19,2
0001ca c008      	RJMP _0x83
0001cb 99cb      	SBIC 0x19,3
0001cc c006      	RJMP _0x83
0001cd 99cc      	SBIC 0x19,4
0001ce c004      	RJMP _0x83
0001cf 99cd      	SBIC 0x19,5
0001d0 c002      	RJMP _0x83
0001d1 9bce      	SBIS 0x19,6
0001d2 c001      	RJMP _0x84
                 _0x83:
0001d3 c001      	RJMP _0x82
                 _0x84:
                 ; 0000 0067         {
                 ; 0000 0068             PORTC.0=0;
0001d4 d072      	RCALL SUBOPT_0x1
                 ; 0000 0069             PORTC.1=0;
                 ; 0000 006A             PORTC.2=1;
                 ; 0000 006B             PORTC.3=0;
                 ; 0000 006C         }
                 ; 0000 006D         if (PINA.0==1&&PINA.1==0&&PINA.2==0&&PINA.3==0&&PINA.4==0&&PINA.5==0&&PINA.6==0) // Left Station
                 _0x82:
0001d5 9bc8      	SBIS 0x19,0
0001d6 c00c      	RJMP _0x8E
0001d7 99c9      	SBIC 0x19,1
0001d8 c00a      	RJMP _0x8E
0001d9 99ca      	SBIC 0x19,2
0001da c008      	RJMP _0x8E
0001db 99cb      	SBIC 0x19,3
0001dc c006      	RJMP _0x8E
0001dd 99cc      	SBIC 0x19,4
0001de c004      	RJMP _0x8E
0001df 99cd      	SBIC 0x19,5
0001e0 c002      	RJMP _0x8E
0001e1 9bce      	SBIS 0x19,6
0001e2 c001      	RJMP _0x8F
                 _0x8E:
0001e3 c004      	RJMP _0x8D
                 _0x8F:
                 ; 0000 006E         {
                 ; 0000 006F             PORTC.0=0;
0001e4 98a8      	CBI  0x15,0
                 ; 0000 0070             PORTC.1=1;
0001e5 9aa9      	SBI  0x15,1
                 ; 0000 0071             PORTC.2=1;
0001e6 9aaa      	SBI  0x15,2
                 ; 0000 0072             PORTC.3=0;
0001e7 98ab      	CBI  0x15,3
                 ; 0000 0073         }
                 ; 0000 0074         if (PINA.0==0&&PINA.1==1&&PINA.2==0&&PINA.3==0&&PINA.4==0&&PINA.5==0&&PINA.6==0) // Left Station
                 _0x8D:
0001e8 99c8      	SBIC 0x19,0
0001e9 c00c      	RJMP _0x99
0001ea 9bc9      	SBIS 0x19,1
0001eb c00a      	RJMP _0x99
0001ec 99ca      	SBIC 0x19,2
0001ed c008      	RJMP _0x99
0001ee 99cb      	SBIC 0x19,3
0001ef c006      	RJMP _0x99
0001f0 99cc      	SBIC 0x19,4
0001f1 c004      	RJMP _0x99
0001f2 99cd      	SBIC 0x19,5
0001f3 c002      	RJMP _0x99
0001f4 9bce      	SBIS 0x19,6
0001f5 c001      	RJMP _0x9A
                 _0x99:
0001f6 c001      	RJMP _0x98
                 _0x9A:
                 ; 0000 0075         {
                 ; 0000 0076             PORTC.0=0;
0001f7 d04f      	RCALL SUBOPT_0x1
                 ; 0000 0077             PORTC.1=0;
                 ; 0000 0078             PORTC.2=1;
                 ; 0000 0079             PORTC.3=0;
                 ; 0000 007A         }
                 ; 0000 007B         if (PINA.0==0&&PINA.1==0&&PINA.2==1&&PINA.3==0&&PINA.4==0&&PINA.5==0&&PINA.6==0) // Left Station
                 _0x98:
0001f8 99c8      	SBIC 0x19,0
0001f9 c00c      	RJMP _0xA4
0001fa 99c9      	SBIC 0x19,1
0001fb c00a      	RJMP _0xA4
0001fc 9bca      	SBIS 0x19,2
0001fd c008      	RJMP _0xA4
0001fe 99cb      	SBIC 0x19,3
0001ff c006      	RJMP _0xA4
000200 99cc      	SBIC 0x19,4
000201 c004      	RJMP _0xA4
000202 99cd      	SBIC 0x19,5
000203 c002      	RJMP _0xA4
000204 9bce      	SBIS 0x19,6
000205 c001      	RJMP _0xA5
                 _0xA4:
000206 c001      	RJMP _0xA3
                 _0xA5:
                 ; 0000 007C         {
                 ; 0000 007D             PORTC.0=0;
000207 d03f      	RCALL SUBOPT_0x1
                 ; 0000 007E             PORTC.1=0;
                 ; 0000 007F             PORTC.2=1;
                 ; 0000 0080             PORTC.3=0;
                 ; 0000 0081         }
                 ; 0000 0082         if (PINA.0==1&&PINA.1==0&&PINA.2==1&&PINA.3==0&&PINA.4==0&&PINA.5==0&&PINA.6==0) // Left Station
                 _0xA3:
000208 9bc8      	SBIS 0x19,0
000209 c00c      	RJMP _0xAF
00020a 99c9      	SBIC 0x19,1
00020b c00a      	RJMP _0xAF
00020c 9bca      	SBIS 0x19,2
00020d c008      	RJMP _0xAF
00020e 99cb      	SBIC 0x19,3
00020f c006      	RJMP _0xAF
000210 99cc      	SBIC 0x19,4
000211 c004      	RJMP _0xAF
000212 99cd      	SBIC 0x19,5
000213 c002      	RJMP _0xAF
000214 9bce      	SBIS 0x19,6
000215 c001      	RJMP _0xB0
                 _0xAF:
000216 c001      	RJMP _0xAE
                 _0xB0:
                 ; 0000 0083         {
                 ; 0000 0084             PORTC.0=0;
000217 d02f      	RCALL SUBOPT_0x1
                 ; 0000 0085             PORTC.1=0;
                 ; 0000 0086             PORTC.2=1;
                 ; 0000 0087             PORTC.3=0;
                 ; 0000 0088         }
                 ; 0000 0089         if (PINA.0==1&&PINA.1==1&&PINA.2==0&&PINA.3==0&&PINA.4==0&&PINA.5==0&&PINA.6==0) // Left Station
                 _0xAE:
000218 9bc8      	SBIS 0x19,0
000219 c00c      	RJMP _0xBA
00021a 9bc9      	SBIS 0x19,1
00021b c00a      	RJMP _0xBA
00021c 99ca      	SBIC 0x19,2
00021d c008      	RJMP _0xBA
00021e 99cb      	SBIC 0x19,3
00021f c006      	RJMP _0xBA
000220 99cc      	SBIC 0x19,4
000221 c004      	RJMP _0xBA
000222 99cd      	SBIC 0x19,5
000223 c002      	RJMP _0xBA
000224 9bce      	SBIS 0x19,6
000225 c001      	RJMP _0xBB
                 _0xBA:
000226 c001      	RJMP _0xB9
                 _0xBB:
                 ; 0000 008A         {
                 ; 0000 008B             PORTC.0=0;
000227 d01f      	RCALL SUBOPT_0x1
                 ; 0000 008C             PORTC.1=0;
                 ; 0000 008D             PORTC.2=1;
                 ; 0000 008E             PORTC.3=0;
                 ; 0000 008F         }
                 ; 0000 0090         if (PINA.0==0&&PINA.1==1&&PINA.2==1&&PINA.3==0&&PINA.4==0&&PINA.5==0&&PINA.6==0) // Left Station
                 _0xB9:
000228 99c8      	SBIC 0x19,0
000229 c00c      	RJMP _0xC5
00022a 9bc9      	SBIS 0x19,1
00022b c00a      	RJMP _0xC5
00022c 9bca      	SBIS 0x19,2
00022d c008      	RJMP _0xC5
00022e 99cb      	SBIC 0x19,3
00022f c006      	RJMP _0xC5
000230 99cc      	SBIC 0x19,4
000231 c004      	RJMP _0xC5
000232 99cd      	SBIC 0x19,5
000233 c002      	RJMP _0xC5
000234 9bce      	SBIS 0x19,6
000235 c001      	RJMP _0xC6
                 _0xC5:
000236 c001      	RJMP _0xC4
                 _0xC6:
                 ; 0000 0091         {
                 ; 0000 0092             PORTC.0=0;
000237 d00f      	RCALL SUBOPT_0x1
                 ; 0000 0093             PORTC.1=0;
                 ; 0000 0094             PORTC.2=1;
                 ; 0000 0095             PORTC.3=0;
                 ; 0000 0096         }
                 ; 0000 0097         if (PINB.0==1||PINB.1==1)
                 _0xC4:
000238 99b0      	SBIC 0x16,0
000239 c002      	RJMP _0xD0
00023a 9bb1      	SBIS 0x16,1
00023b c004      	RJMP _0xCF
                 _0xD0:
                 ; 0000 0098         {
                 ; 0000 0099             PORTC.0=0;
00023c 98a8      	CBI  0x15,0
                 ; 0000 009A             PORTC.1=0;
00023d 98a9      	CBI  0x15,1
                 ; 0000 009B             PORTC.2=0;
00023e 98aa      	CBI  0x15,2
                 ; 0000 009C             PORTC.3=0;
00023f 98ab      	CBI  0x15,3
                 ; 0000 009D         }
                 ; 0000 009E     }
                 _0xCF:
000240 ce10      	RJMP _0x3
                 ; 0000 009F }
                 _0xDA:
000241 cfff      	RJMP _0xDA
                 ; .FEND
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x0:
000242 9aa8      	SBI  0x15,0
000243 98a9      	CBI  0x15,1
000244 98aa      	CBI  0x15,2
000245 98ab      	CBI  0x15,3
000246 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1:
000247 98a8      	CBI  0x15,0
000248 98a9      	CBI  0x15,1
000249 9aaa      	SBI  0x15,2
00024a 98ab      	CBI  0x15,3
00024b 9508      	RET
                 
                 
                 	.CSEG
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16A register use summary:
r0 :   0 r1 :   0 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   0 r17:   0 r18:   0 r19:   0 r20:   0 r21:   0 r22:   0 r23:   0 
r24:   4 r25:   1 r26:   2 r27:   1 r28:   1 r29:   1 r30:  22 r31:   2 
x  :   2 y  :   0 z  :   0 
Registers used: 9 out of 35 (25.7%)

ATmega16A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   0 add   :   0 
adiw  :   0 and   :   0 andi  :   0 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   0 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :   0 brmi  :   0 brne  :   2 brpl  :   0 brsh  :   0 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :  16 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   2 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   0 cpc   :   0 cpi   :   0 cpse  :   0 dec   :   1 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   0 inc   :   0 jmp   :  22 ld    :   0 ldd   :   0 ldi   :  15 
lds   :   0 lpm   :   0 lsl   :   0 lsr   :   0 mov   :   0 movw  :   0 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   0 
ori   :   0 out   :  13 pop   :   0 push  :   0 rcall :  12 ret   :   2 
reti  :   0 rjmp  : 243 rol   :   0 ror   :   0 sbc   :   0 sbci  :   0 
sbi   :   8 sbic  : 117 sbis  : 109 sbiw  :   1 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :   2 std   :   0 sts   :   0 sub   :   0 subi  :   0 swap  :   0 
tst   :   0 wdr   :   0 
Instructions used: 16 out of 116 (13.8%)

ATmega16A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000498   1176      0   1176   16384   7.2%
[.dseg] 0x000060 0x000160      0      0      0    1024   0.0%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 0 warnings
